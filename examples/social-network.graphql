schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

"""
Social Network API Schema
"""

type Query {
  """
  Get user by ID
  """
  user(id: ID!): User

  """
  Get post by ID
  """
  post(id: ID!): Post

  """
  Search posts by keyword
  """
  searchPosts(keyword: String!, limit: Int = 10): [Post!]!

  """
  Get feed for current user
  """
  feed(limit: Int = 20): [Post!]!
}

type Mutation {
  """
  Create a new user
  """
  createUser(input: CreateUserInput!): User!

  """
  Update user profile
  """
  updateUser(id: ID!, input: UpdateUserInput!): User!

  """
  Create a new post
  """
  createPost(input: CreatePostInput!): Post!

  """
  Like a post
  """
  likePost(postId: ID!): Post!

  """
  Add a comment to a post
  """
  addComment(postId: ID!, content: String!): Comment!
}

type Subscription {
  """
  Subscribe to new posts in feed
  """
  newPost: Post!

  """
  Subscribe to new comments on a post
  """
  newComment(postId: ID!): Comment!

  """
  Subscribe to new likes on a post
  """
  newLike(postId: ID!): Like!
}

type User {
  id: ID!
  username: String!
  email: String!
  name: String
  bio: String
  avatar: String
  createdAt: DateTime!
  updatedAt: DateTime!
  posts: [Post!]!
  followers: [User!]!
  following: [User!]!
}

type Post {
  id: ID!
  author: User!
  content: String!
  media: [Media!]
  likes: [Like!]!
  comments: [Comment!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Comment {
  id: ID!
  post: Post!
  author: User!
  content: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Like {
  id: ID!
  post: Post!
  user: User!
  createdAt: DateTime!
}

type Media {
  id: ID!
  url: String!
  type: MediaType!
  width: Int
  height: Int
}

enum MediaType {
  IMAGE
  VIDEO
  GIF
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
  name: String
  bio: String
  avatar: String
}

input UpdateUserInput {
  username: String
  email: String
  name: String
  bio: String
  avatar: String
}

input CreatePostInput {
  content: String!
  media: [MediaInput!]
}

input MediaInput {
  url: String!
  type: MediaType!
  width: Int
  height: Int
}

"""
DateTime custom scalar type
"""
scalar DateTime

"""
Directives for security and caching
"""
directive @auth(requires: Role = USER) on OBJECT | FIELD_DEFINITION
directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE | UNION

enum Role {
  ADMIN
  USER
  GUEST
}

enum CacheControlScope {
  PUBLIC
  PRIVATE
}
